version: '2'
services:
  zookeeper:
    image: 'debezium/zookeeper:${DEBEZIUM_VERSION}'
    ports:
      - '2181:2181'
      - '2888:2888'
      - '3888:3888'
  kafka:
    image: 'debezium/kafka:${DEBEZIUM_VERSION}'
    ports:
      - '9092:9092'
    links:
      - zookeeper
    environment:
      - 'ZOOKEEPER_CONNECT=zookeeper:2181'
    depends_on: 
      - 'zookeeper'
  connect:
    image: 'debezium/connect:${DEBEZIUM_VERSION}'
    ports:
      - '8083:8083'
    links:
      - kafka
    environment:
      - 'BOOTSTRAP_SERVERS=kafka:9092'
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE="true"
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=100
  worker:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - './:/app'
    depends_on:
      - connect
      - kafka

